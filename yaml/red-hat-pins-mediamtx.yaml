apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"mediamtx"}]'
  labels:
    app: rh-pins
  name: rh-pins
spec:
  selector:
    matchLabels:
      app: rh-pins
  replicas: 1
  template:
    metadata:
      labels:
        app: rh-pins
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: rh-pins
        image: ghcr.io/kwkoo/rhpins:12.1.0
        imagePullPolicy: Always
        env:
        - name: CAMERA
          value: rtsp://mediamtx:8554/mystream
        - name: FORCE_CPU
          value: "false"
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            nvidia.com/gpu: 1
---
apiVersion: v1
kind: Service
metadata:
  name: rh-pins
  labels:
    app: rh-pins
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: rh-pins
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: rh-pins
  name: rh-pins
spec:
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
  port:
    targetPort: http
  to:
    kind: Service
    name: rh-pins
    weight: 100
  wildcardPolicy: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mediamtx
  name: mediamtx
spec:
  selector:
    matchLabels:
      app: mediamtx
  replicas: 1
  template:
    metadata:
      labels:
        app: mediamtx
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mediamtx
        image: docker.io/bluenviron/mediamtx:latest-ffmpeg
        imagePullPolicy: IfNotPresent
        env:
        - name: MTX_PROTOCOLS
          value: tcp
        ports:
        - containerPort: 8554
          name: rtsp
---
apiVersion: v1
kind: Service
metadata:
  name: mediamtx
  labels:
    app: mediamtx
spec:
  type: LoadBalancer
  ports:
  - port: 8554
    name: rtsp
  selector:
    app: mediamtx